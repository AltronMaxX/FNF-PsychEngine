# This is a basic workflow to help you get started with Actions

name: Build


# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main, experimental ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  buildWindows:
    runs-on: windows-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2.3.0

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4
      - name: Restore existing build cache for faster compilation
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          key: cache-build-windows
          path: |
            .haxelib/
            export/release/windows/haxe/
            export/release/windows/obj/
            export/32bit/windows/haxe/
            export/32bit/windows/obj/
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          haxelib setup C:/haxelib
          haxelib install hxcpp > /dev/null --quiet
          haxe -cp ./setup -D analyzer-optimize -main Main --interp
          haxelib run lime rebuild windows
        shell: cmd
      - name: Skip SScript setup mode
        run: echo 'oy9:showMacroty8:loopCosti25y10:includeAllfg' >> %USERPROFILE%/settings.cocoa
        shell: cmd
      - name: Compile 64
        run: haxelib run lime build windows
      - name: Compile 32
        run: haxelib run lime build windows -DHXCPP_M32 -D32bits
      - name: Make 64 zip
        run: |
          7z a -tzip "mod64.zip" "./export/release/windows/bin/*"
      - name: Make 32 zip
        run: |
          7z a -tzip "mod32.zip" "./export/32bit/windows/bin/*"
      - name: Publish Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windowsBuild
          path: |
            mod64.zip
            mod32.zip
      - name: Clearing already existing cache
        uses: actions/github-script@v6
        with:
          script: |
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const cache of caches.data.actions_caches) {
              if (cache.key == "cache-build-windows") {
                console.log('Clearing ' + cache.key + '...')
                await github.rest.actions.deleteActionsCacheById({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  cache_id: cache.id,
                })
                console.log("Cache cleared.")
              }
            }
          
      - name: Save new cache
        uses: actions/cache/save@v3
        with:
          path: |
            .haxelib/
            export/release/windows/haxe/
            export/release/windows/obj/
            export/32bit/windows/haxe/
            export/32bit/windows/obj/
          key: cache-build-windows
